spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://mysql:3307/onAir?autoReconnect=true&allowPublicKeyRetrieval=true&useSSL=false&characterEncoding=UTF-8&serverTimezone=Asia/Seoul&createDatabaseIfNotExist=true
#    url: jdbc:mysql://localhost:3306/onAir?autoReconnect=true&allowPublicKeyRetrieval=true&useSSL=false&characterEncoding=UTF-8&serverTimezone=Asia/Seoul&createDatabaseIfNotExist=true
    username: onAir
    password: onAir123!@#

    hikari:
      connection-timeout: 600000   # 10분(밀리초)
      maximum-pool-size: 20
      minimum-idle: 5
  mvc:
    async:
      request-timeout: 300000  # 5분 (ms 단위)
  jpa:
    hibernate:
      ddl-auto: none
    show-sql: true
    properties:
      hibernate.jdbc.batch_size: 100
      hibernate.order_inserts: true
      hibernate.order_updates: true
      hibernate:
        format_sql: true
    database-platform: org.hibernate.dialect.MySQLDialect
  mysql:
    charset: utf8mb4
    collation: utf8mb4_unicode_ci

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: 378618306834-bm81etunvujofnk4msnnsn2pn1380tef.apps.googleusercontent.com
            client-secret: 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
            scope:
              - emails
              - profile
            redirect-uri : https://onair-lime.vercel.app/loadingAuth
#             - http://localhost:5173/loadingAuth


  servlet:
    multipart:
      max-file-size: 20MB
      max-request-size: 20MB

  cache:
    type:
      caffeine:
        spec: maximumSize=1000,expireAfterWrite=10m



springdoc:
  swagger-ui:
    path: /api-test  # swagger-ui ?? ??? ?? ??, ?? ??? ???? http://localhost:8080/swagger-ui/index.html? ????? ?.
    groups-order: DESC # path, query, body, response ??? ??
    tags-sorter: alpha # ??? ??? ??? ??
    operations-sorter: method  # delete - get - patch - post - put ??? ??, alpha? ???? ??? ??? ?? ??

jwt:
  secret: ZGZsbTJwM2ttZndlb2lmbjEzOTRnbnVxZWYxMjM1Zmdhc2RmZzQ0NHdkZjM0YXNkZjhhc2RmOTM0ZA==

server:
  port: ${PORT:8080}
